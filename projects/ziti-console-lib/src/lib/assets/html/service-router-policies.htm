    <!-- General Page Layout HTML -->
    <div class="header">
        <div class="title">Manage <span data-bind="pageTitle"></span></div>
        <div class="bread">Ziti Network <span class="secondary">/</span> Manage <span data-bind="pageTitle"></span></div>
        <div class="line"></div>
        {{html.tabPolicies}}
    </div>
    <div class="action icon-plus" data-action="add"></div>
    <div class="filters">
        <input id="SearchFilter" data-defined="search" type="text" class="search" placeholder="Type to Filter" />
        <div class="clear icon-clear" data-defined="clear"></div>
        <div class="searchButton icon-search"></div>
        <div class="counters"><span id="Start">-</span>-<span id="End">-</span> of <span id="Total">-</span></div>
        <div class="navigate prev icon-prev disabled"></div>
        <div class="navigate next icon-next disabled"></div>
    </div>
    <div class="area data" data-defined="table">
        <div class="table">
            <div class="head grid six">
                <div class="col">
                    <div class="selector all"></div>
                </div>
                <div class="col sort asc" data-by="name">Name<div class="dragger"></div></div>
                <div class="col desktop">Routers<div class="dragger"></div></div>
                <div class="col desktop">Services<div class="dragger"></div></div>
                <div class="col desktop sort" data-by="semantic">Semantic<div class="dragger"></div></div>
                <div class="col"></div>
            </div>
            <div class="rows" data-defined="rows">
                <!-- This area will be replaced by data rows -->
            </div>
        </div>
    </div>
    <div class="nodata" data-defined="empty">No <span data-bind="pageTitle"></span> Defined, Click the plus to add A <span data-bind="singular"></span>.</div>



    <!-- Template HTML will be used to display rows of data -->
    <div id="RowTemplate" class="row grid six template" data-defined="template">
        <div class="col">
            <div class="selector" data-id="{{id}}"></div>
        </div>
        <div class="col" data-id="{{id}}"><a href="javascript:page.edit('{{id}}');">{{name}}</a></div>
        <div class="col desktop" data-id="{{id}}">{{selector.edgeRouterRoles}}</div>
        <div class="col desktop" data-id="{{id}}">{{selector.serviceRoles}}</div>
        <div class="col desktop" data-id="{{id}}">{{semantic}}</div>
        <div class="col allowOver">
            <div class="dots" data-id="{{id}}">...
                <div class="gridMenu" data-id="{{id}}">
                    <div class="gridAction" data-id="{{id}}" data-action="edit">Edit</div>
                    <div class="gridAction" data-id="{{id}}" data-action="delete">Delete</div>
                </div>
            </div>
        </div>
    </div>




	<!-- Modification Modals -->
    <div id="AddModal" class="modal box full">
        <div class="sized large">
            <div class="close icon-close"></div>
            <div class="title adding">Create <span data-bind="singular"></span></div>
            <div class="subtitle adding">Add a New <span data-bind="singular"></span> by completing the following form</div>
            <div class="title editing">Edit <span data-bind="singular"></span></div>
            <div class="subtitle editing">Change the <span data-bind="singular"></span> Details</div>
            <div class="grid split">
                <div>
                    <label for="Name">Name</label>
                    <input id="Name" type="text" data-bind="data.name" maxlength="500" placeholder="Enter a name" data-enter="SaveButton" />
                    <label for="RouterRoles">Router Role Attributes</label>
                    <div id="RouterRoles"></div>
                    <label for="ServiceRoles">Service Role Attributes</label>
                    <div id="ServiceRoles"></div>
                    <label for="Semantics">Semantics</label>
                    <select id="Semantics" data-bind="data.semantic" data-default="AnyOf" data-enter="SaveButton">
                        <option value="AnyOf">Has Any Role Attribute</option>
                        <option value="AllOf">Must Have All Role Attributes</option>
                    </select>
                </div>
                <div>
                    <div id="TagArea" data-tagarea="policies"></div>
                    {{html.customtags}}
                    {{html.api}}
                    {{html.save}}
                </div>
            </div>
        </div>
	</div>
    
    
    <script language="javascript" type="text/javascript">
        page = {
            filterObject: null,
            routerRoles: null,
            serviceRoles: null,
            apiParams: null,
            init: function() {
                page.routerRoles = new Selector("RouterRoles","edge routers","edge-routers");
                page.serviceRoles = new Selector("ServiceRoles","services","services");
                page.filterObject = new Data("service-edge-router-policies");
                page.routerRoles.init();
                page.serviceRoles.init();
                page.filterObject.init(true, true);

                page.apiParams = CodeMirror.fromTextArea(document.getElementById("ApiParams"), { mode: "application/json", lineNumbers: true, extraKeys: {"Ctrl-Space": "autocomplete"}, readOnly: true });
            }, 
            gridAction: function(e) {
                var action = $(e.currentTarget).data("action");
                var id = $(e.currentTarget).data("id");
                if (action=="delete") page.filterObject.delete([id]);
                else if (action=="edit") page.edit(id);
            },
            edit: function(id) {
                var detail = page.filterObject.details(id);
                page.routerRoles.val(detail.edgeRouterRoles);
                page.serviceRoles.val(detail.serviceRoles);
                page.params();
                modal.show("AddModal");
            },
            save: function() {
                if (page.validate()) {
                    var obj = page.params();
                    page.filterObject.save(obj);
                } else growler.form();
            },
            formReset: function() {
                page.params();
            },
            params: function() {
                try {  
                    var obj = {
                        name: $("#Name").val(),
                        type: $("#Type").val(),
                        serviceRoles: page.serviceRoles.val(),
                        edgeRouterRoles: page.routerRoles.val(),
                        semantic: $("#Semantics").val(),
                        tags: tags.val()
                    };

                    var url = settings.versionData.baseUrl+settings.versionData.serviceUrl+"/"+page.filterObject.name;
                    if (page.filterObject.isEditing()) url += "/"+page.filterObject.editId;
                    $("#ApiUrl").val(url);  
                    var stayAt = $("#AddModal").scrollTop();
                    page.apiParams.setValue(JSON.stringify(obj));
                    page.apiParams.autoFormatRange({line:0, ch:0}, {line:page.apiParams.lineCount()});
                    page.apiParams.scrollTo(null, 0);
                    $("#AddModal").scrollTop(stayAt);

                    return obj
                } catch (e) {
                    console.log(e);
                }
            },
            validate: function() {
                $(".errors").removeClass("errors");
                if ($("#Name").val().trim().length==0) $("#Name").addClass("errors");
                return $(".errors").length==0;
            }
        }
    </script>